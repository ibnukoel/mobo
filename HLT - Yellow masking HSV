import numpy as np
import cv2 as cv
import sys
import math
import argparse
from matplotlib import pyplot as plt
img = cv.imread('epuk9.jpg')
hsv = cv.cvtColor(img, cv.COLOR_BGR2HSV)
#img2 = cv.cvtColor(img,cv.COLOR_BGR2GRAY)



lower = np.array([22, 93, 0])
upper = np.array([45, 255, 255])

mask = cv.inRange(hsv, lower, upper)
output = cv.bitwise_and(img,img, mask= mask)
blur = cv.GaussianBlur(output,(5,5),100)
#cv.imshow("Color Detected", np.hstack((img,output)))
#cv.destroyAllWindows()

edges = cv.Canny(blur,10,150)
#dst = cv.Canny(img0, 50, 200, None, 3)


cv.imshow('houghlines5.jpg',mask)
cv.waitKey()

#edges2 = cv.Sobel(src=blur, ddepth=cv.CV_64F, dx=1, dy=1, ksize=5)

lines = cv.HoughLines(edges, 1, np.pi / 180, 150, None, 0, 0)
if lines is not None:
    for i in range(0, len(lines)):
        rho = lines[i][0][0]
        theta = lines[i][0][1]
        print('theta ', i, ' = ', theta)
        print('rho   ', i, ' = ', rho)
        a = math.cos(theta)
        b = math.sin(theta)
        x0 = a * rho
        y0 = b * rho
        pt1 = (int(x0 + 1000 * (-b)), int(y0 + 1000 * (a)))
        pt2 = (int(x0 - 1000 * (-b)), int(y0 - 1000 * (a)))
        cv.line(img, pt1, pt2, (0, 255, 0), 3, cv.LINE_AA)

"""
lines = cv.HoughLinesP(edges,1,np.pi/180,150,None,0,0)
#print(lines)
for line in lines:
    x1,y1,x2,y2 = line[0]
    cv.line(img,(x1,y1),(x2,y2),(0,255,0),2)
"""

cv.imshow('houghlines5.jpg',img)
cv.waitKey()
